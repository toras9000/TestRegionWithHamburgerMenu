<mah:MetroWindow x:Class="TestRegionWithHamburgerMenu.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:modules="clr-namespace:TestRegionWithHamburgerMenu.Modules"
        xmlns:local="clr-namespace:TestRegionWithHamburgerMenu.Views"
        Title="TestRegionWithHamburgerMenu"
        Width="525" Height="350">

    <mah:MetroWindow.Resources>
        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
            <DockPanel Height="48" LastChildFill="True">
                <Grid x:Name="IconPart" DockPanel.Dock="Left" Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength}">
                    <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Focusable="False" IsTabStop="False"
                                    Content="{Binding Icon}"/>
                </Grid>
                <TextBlock x:Name="TextPart" VerticalAlignment="Center" FontSize="16" Text="{Binding Label}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=PanePlacement}" Value="Right">
                    <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                    <Setter TargetName="TextPart" Property="Margin" Value="8 0 0 0" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </mah:MetroWindow.Resources>
    <mah:HamburgerMenu x:Name="xHamburgerMenu" ItemTemplate="{StaticResource MenuItemTemplate}">
        <mah:HamburgerMenu.ItemsSource>
            <mah:HamburgerMenuItemCollection>
                <mah:HamburgerMenuIconItem Label="ViewA" Icon="{icons:Material Kind=AlphaACircle, Width=24, Height=24}"
                                           Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=DataContext.ChangeContentCommand}"
                                           CommandParameter="ViewA" />
                <mah:HamburgerMenuIconItem Label="ViewB" Icon="{icons:Material Kind=AlphaBCircle, Width=24, Height=24}"
                                           Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=DataContext.ChangeContentCommand}"
                                           CommandParameter="ViewB" />
            </mah:HamburgerMenuItemCollection>
        </mah:HamburgerMenu.ItemsSource>
        <!--
            # 回避策前の状態は前のコミットを参照。
        
            Window の添付プロパティを ContentControl にも設定して RegionManager を見つけられるようにする。
            注意点としてこれは Content を1つ固定しているから出来ることのよう。
            ContentTemplate のテンプレート内に置くような記述だと多重登録的なエラーが出る。
        -->
        <mah:HamburgerMenu.Content>
            <ContentControl prism:RegionManager.RegionManager="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=(prism:RegionManager.RegionManager)}"
                            prism:RegionManager.RegionName="MainContentRegion" />
        </mah:HamburgerMenu.Content>
    </mah:HamburgerMenu>
</mah:MetroWindow>
